load("@fbsource//tools/build_defs:default_platform_defs.bzl", "ANDROID", "APPLE", "CXX", "FBCODE", "WINDOWS")
load("@fbsource//tools/build_defs:fb_native_wrapper.bzl", "fb_native")
load("@fbsource//tools/build_defs:fb_xplat_cxx_library.bzl", "fb_xplat_cxx_library")
load("@fbsource//tools/build_defs:fb_xplat_rust_library.bzl", "fb_xplat_rust_library")
load("@fbsource//tools/build_defs:fbsource_utils.bzl", "is_fbcode_compatible", "is_fbcode_mode_mac", "is_fbcode_mode_win", "is_xplat")
load("@fbsource//tools/build_defs:rust_bindgen_library.bzl", "rust_bindgen_library")

oncall("rust_libraries")

rust_bindgen_library(
    name = "iobuf-sys",
    allowlist_funcs = [
        "facebook::rust::.*",
    ],
    allowlist_types = [
        "folly::IOBuf",
        "facebook::rust::.*",
    ],
    allowlist_vars = [
        "facebook::rust::.*",
    ],
    blocklist_types = [
        # These seems to come from type_traits / make_signed via fbvector
        "folly::fbvector.*",
        "__type",
        "type_",
    ],
    cpp_deps = [":iobuf-ffi"],
    cxx_namespaces = True,
    generate = ("types", "vars", "functions"),
    header = "iobuf.h",
    opaque_types = [
        "std::.*",
        "folly::fbstring.*",
    ],
    platforms = (CXX, ANDROID, APPLE, FBCODE, WINDOWS),
    src_includes = ["iobuf_sys.rs"],
    visibility = [],
) if is_xplat() else None

fb_xplat_cxx_library(
    name = "iobuf-ffi",
    srcs = ["iobuf.cpp"],
    exported_headers = ["iobuf.h"],
    platforms = (CXX, ANDROID, APPLE, FBCODE, WINDOWS),
    preferred_linkage = "static",
    visibility = ["PUBLIC"],
    exported_deps = select({
        "DEFAULT": [
            "fbsource//xplat/folly/io:iobuf",
        ],
        "ovr_config//os:linux": ["fbcode//folly/io:iobuf" if is_fbcode_compatible() else "fbsource//xplat/folly/io:iobuf"],
        "ovr_config//os:macos": ["fbcode//folly/io:iobuf" if is_fbcode_mode_mac() else "fbsource//xplat/folly/io:iobuf"],
        "ovr_config//os:windows": ["fbcode//folly/io:iobuf" if is_fbcode_mode_win() else "fbsource//xplat/folly/io:iobuf"],
    }),
) if is_xplat() else None

fb_xplat_rust_library(
    name = "iobuf",
    srcs = glob(["src/*.rs"]),
    cpp_deps = [":iobuf-ffi"],
    crate_root = "src/lib.rs",
    cxx_bridge = "src/lib.rs",
    features = [
        "minibytes",
    ],
    platforms = (CXX, ANDROID, APPLE, WINDOWS),
    test_deps = [
        "fbsource//third-party/rust:quickcheck",
        "fbsource//xplat/thrift/lib/rust/src/dep_tests:test_if-rust",
    ],
    visibility = ["PUBLIC"],
    xplat_preexisting_target_flavors = [FBCODE],
    deps = [
        "fbcode//eden/scm/lib/minibytes:minibytes",
        "fbsource//third-party/rust:bytes",
        "fbsource//third-party/rust:cxx",
        "fbsource//third-party/rust:memmap2",
        "fbsource//xplat/thrift/lib/rust:fbthrift",
        ":iobuf-sys",
    ],
) if is_xplat() else None

fb_native.alias(
    name = "iobufFbcode",
    actual = ":iobuf",
    visibility = ["PUBLIC"],
) if is_xplat() else None
